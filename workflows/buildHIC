#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import pandas as pd
import glob

##### Load config and sample sheets #####
onsuccess:
        print("buildHIC completed successfully!")

configfile: "config/config.yaml"

## Read in samplesheet
samples = pd.read_table(config["samplesheet"])

## Convert all columns to strings
samples = samples.astype(str)

## Concatenate columns to identify which groups to run (i.e. Seq_Rep will be run together)
samples['id'] = samples[config['mergeBy']].agg('_'.join, axis=1)

## Use ID's as groups
groups = list(set(samples['id']))

## Group by id and extract merged_nodups
mergNoDups = samples.groupby('id')['merged_nodups'].apply(list).to_dict()

## Get unique files for each grouping
for key in groups:
    mergNoDups[key] = list(set(mergNoDups[key]))

##### Define rules #####
rule all:
    input:
        expand('output/{group}/{group}_inter{ext}', group=groups, ext=['.hic'])

## Merge all merged_nodups.txt files found in mergeList
rule mergedNoDups:
    input:
        lambda wildcards: mergNoDups[wildcards.group]
    output:
        merged_nodups = 'output/{group}/{group}_merged_nodups.txt.gz',
        done = 'output/{group}/{group}_mergedNoDups_done.txt'
    log:
        'output/{group}/logs/{group}_merged_nodups.err'
    benchmark:
        'output/{group}/benchmarks/{group}_merged_nodups.tsv'
    threads: 8
    shell:
        """
        module load pigz
        tmp_dir=$(mktemp -d -p $PWD)
        cmd="sort --parallel={threads} -T $tmp_dir -m -k3,3d -k7,7d "
        for i in {input}; do cmd="$cmd <(cat '$i')"; done
        eval "$cmd" | pigz -p {threads} > {output.merged_nodups} 2> {log}
        rm -rf $tmp_dir
        touch {output.done}
        """

## Create Hi-C maps file for MQ > 0
rule hic:
    input:
        merged_nodups = rules.mergedNoDups.output.merged_nodups,
        merged_nodups_done = rules.mergedNoDups.output.done
    output:
        hic = 'output/{group}/{group}_inter.hic'
    log:
        err = 'output/{group}/logs/{group}_hic.err',
        out = 'output/{group}/logs/{group}_hic.out'
    benchmark:
        'output/{group}/benchmarks/{group}_hic.tsv'
    params:
        chromSizes = config['chromSizes']
    threads: 1
    shell:
        """
        ./scripts/juicer_tools pre -q 1 {input.merged_nodups} {output.hic} {params.chromSizes} 1>> {log.out} 2>> {log.err}
        """
